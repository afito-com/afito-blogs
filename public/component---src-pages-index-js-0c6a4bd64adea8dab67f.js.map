{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["keywords","BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","filter","p","Date","node","frontmatter","date","location","title","image","cover","childImageSharp","fluid","src","className","to","fields","slug","alt","author","toLocaleDateString","excerpt","map","key","React","Component","pageQuery"],"mappings":"kPAQA,IAAMA,EAAW,CAAC,kBAAD,4FASXC,E,gLACJC,OAAA,WAAU,IAEFC,EADWC,KAAKC,MAAdC,KACWC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEE,KAAKC,YAAYC,MAAQ,IAAIH,QAE/F,OACE,kBAAC,IAAD,CAAQI,SAAUX,KAAKC,MAAMU,UAC3B,kBAAC,IAAD,CAAKC,MAAM,YAAYhB,SAAUA,EAAUiB,MAAOd,EAAM,GAAGS,KAAKC,YAAYK,MAAMC,gBAAgBC,MAAMC,MACxG,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,eAAd,aAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,0BACb,kBAAC,OAAD,CAAMA,UAAU,QAAQC,GAAE,IAAMpB,EAAM,GAAGS,KAAKY,OAAOC,MACnD,kBAAC,IAAD,CACEH,UAAU,aACVF,MAAOjB,EAAM,GAAGS,KAAKC,YAAYK,MAAMC,gBAAgBC,MACvDM,IAAI,YAIV,yBAAKJ,UAAU,0BACb,kBAAC,OAAD,CAAMA,UAAU,QAAQC,GAAE,IAAMpB,EAAM,GAAGS,KAAKY,OAAOC,MACnD,wBAAIH,UAAU,oBAAoBnB,EAAM,GAAGS,KAAKC,YAAYG,QAE9D,2BACE,0BAAMM,UAAU,SACbnB,EAAM,GAAGS,KAAKC,YAAYc,OAC3B,6BACC,IAAIhB,KAAKR,EAAM,GAAGS,KAAKC,YAAYC,MAAMc,uBAG9C,2BAAIzB,EAAM,GAAGS,KAAKiB,WAGtB,yBAAKP,UAAU,WACf,yBAAKA,UAAU,OACb,wBAAIA,UAAU,eAAd,WAEF,yBAAKA,UAAU,OACZnB,EAAM2B,KAAI,YAAe,IAAZlB,EAAW,EAAXA,KACNI,EAAQJ,EAAKC,YAAYG,OAASJ,EAAKY,OAAOC,KAEpD,OACE,yBAAKH,UAAU,mCAAmCS,IAAKnB,EAAKY,OAAOC,MACjE,kBAAC,OAAD,CAAMH,UAAU,QAAQC,GAAE,IAAMX,EAAKY,OAAOC,MAC1C,kBAAC,IAAD,CACEH,UAAU,aACVF,MAAOR,EAAKC,YAAYK,MAAMC,gBAAgBC,MAC9CM,IAAI,UAEN,4BAAKV,IAEP,6BACKJ,EAAKC,YAAYc,QAClB,0BAAML,UAAU,SACbV,EAAKC,YAAYc,OAClB,gCAGDf,EAAKC,YAAYC,MAAQ,0BAAMQ,UAAU,SAASV,EAAKC,YAAYC,iB,GA/DtEkB,IAAMC,WA6EfhC,YAER,IAAMiC,EAAS","file":"component---src-pages-index-js-0c6a4bd64adea8dab67f.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Image from 'gatsby-image';\nimport '../css/boost.scss';\nimport './index.scss';\n\nconst keywords = [\n  `college housing`,\n  `student housing`,\n  `housing`,\n  `off-campus housing`,\n  `off-campus`,\n  `rutgers off-campus housing`\n];\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const posts = data.allMarkdownRemark.edges.filter(p => new Date(p.node.frontmatter.date) < new Date());\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO title=\"All posts\" keywords={keywords} image={posts[0].node.frontmatter.cover.childImageSharp.fluid.src} />\n        <div className=\"Homepage container\">\n          <div className=\"row\">\n            <div className=\"\">\n              <div className=\"row\">\n                <h5 className=\"col--xs--12\">Featured</h5>\n              </div>\n              <div className=\"row\">\n                <div className=\"col--xs--12 col--md--8\">\n                  <Link className=\"Story\" to={`/${posts[0].node.fields.slug}`}>\n                    <Image\n                      className=\"Story__img\"\n                      fluid={posts[0].node.frontmatter.cover.childImageSharp.fluid}\n                      alt=\"Cover\"\n                    />\n                  </Link>\n                </div>\n                <div className=\"col--xs--12 col--md--4\">\n                  <Link className=\"Story\" to={`/${posts[0].node.fields.slug}`}>\n                    <h1 className=\"featured-heading\">{posts[0].node.frontmatter.title}</h1>\n                  </Link>\n                  <p>\n                    <span className=\"light\">\n                      {posts[0].node.frontmatter.author}\n                      <br />\n                      {new Date(posts[0].node.frontmatter.date).toLocaleDateString()}\n                    </span>\n                  </p>\n                  <p>{posts[0].node.excerpt}</p>\n                </div>\n              </div>\n              <div className=\"spacer\" />\n              <div className=\"row\">\n                <h5 className=\"col--xs--12\">Latest</h5>\n              </div>\n              <div className=\"row\">\n                {posts.map(({ node }) => {\n                  const title = node.frontmatter.title || node.fields.slug;\n\n                  return (\n                    <div className=\"col--xs--6 col--sm--6 col--md--4\" key={node.fields.slug}>\n                      <Link className=\"Story\" to={`/${node.fields.slug}`}>\n                        <Image\n                          className=\"Story__img\"\n                          fluid={node.frontmatter.cover.childImageSharp.fluid}\n                          alt=\"Cover\"\n                        />\n                        <h4>{title}</h4>\n                      </Link>\n                      <p>\n                        {!!node.frontmatter.author && (\n                          <span className=\"light\">\n                            {node.frontmatter.author}\n                            <br />\n                          </span>\n                        )}\n                        {!!node.frontmatter.date && <span className=\"light\">{node.frontmatter.date}</span>}\n                      </p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            author\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, maxHeight: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}